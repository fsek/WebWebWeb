"""chore(migration): auto-generated on 5d4026360e563bc0383dfe89835e4a6807c9c283

Revision ID: 08ca8f1cd7d0
Revises: 8eb5c2e74727
Create Date: 2025-09-10 16:27:14.516066

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '08ca8f1cd7d0'
down_revision: Union[str, None] = '8eb5c2e74727'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sub_election_table',
    sa.Column('sub_election_id', sa.Integer(), nullable=False),
    sa.Column('title_sv', sa.String(length=150), nullable=False),
    sa.Column('title_en', sa.String(length=150), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('election_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['election_id'], ['election_table.election_id'], ),
    sa.PrimaryKeyConstraint('sub_election_id')
    )
    op.create_table('nomination_table',
    sa.Column('nomination_id', sa.Integer(), nullable=False),
    sa.Column('sub_election_id', sa.Integer(), nullable=False),
    sa.Column('nominee_name', sa.String(), nullable=False),
    sa.Column('nominee_email', sa.String(), nullable=False),
    sa.Column('motivation', sa.String(), nullable=False),
    sa.Column('election_post_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['election_post_id'], ['election_post_table.election_post_id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post_table.id'], ),
    sa.ForeignKeyConstraint(['sub_election_id'], ['sub_election_table.sub_election_id'], ),
    sa.PrimaryKeyConstraint('nomination_id')
    )
    op.add_column('candidate_table', sa.Column('sub_election_id', sa.Integer(), nullable=False))
    op.drop_constraint('candidate_table_election_id_fkey', 'candidate_table', type_='foreignkey')
    op.create_foreign_key(None, 'candidate_table', 'sub_election_table', ['sub_election_id'], ['sub_election_id'])
    op.drop_column('candidate_table', 'election_id')
    op.add_column('candidations_table', sa.Column('sub_election_id', sa.Integer(), nullable=False))
    op.add_column('candidations_table', sa.Column('post_id', sa.Integer(), nullable=False))
    op.add_column('candidations_table', sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False))
    op.create_foreign_key(None, 'candidations_table', 'sub_election_table', ['sub_election_id'], ['sub_election_id'])
    op.create_foreign_key(None, 'candidations_table', 'post_table', ['post_id'], ['id'])
    op.add_column('election_post_table', sa.Column('sub_election_id', sa.Integer(), nullable=False))
    op.add_column('election_post_table', sa.Column('candidation_count', sa.Integer(), nullable=False))
    op.drop_constraint('election_post_table_election_id_fkey', 'election_post_table', type_='foreignkey')
    op.create_foreign_key(None, 'election_post_table', 'sub_election_table', ['sub_election_id'], ['sub_election_id'])
    op.drop_column('election_post_table', 'election_id')
    op.add_column('election_table', sa.Column('title_sv', sa.String(length=100), nullable=False))
    op.add_column('election_table', sa.Column('title_en', sa.String(length=100), nullable=False))
    op.add_column('election_table', sa.Column('visible', sa.Boolean(), nullable=False))
    op.add_column('election_table', sa.Column('description_sv', sa.String(length=5000), nullable=True))
    op.add_column('election_table', sa.Column('description_en', sa.String(length=5000), nullable=True))
    op.drop_column('election_table', 'title')
    op.drop_column('election_table', 'end_time')
    op.drop_column('election_table', 'description')
    op.add_column('post_table', sa.Column('elected_at_semester', sa.Enum('HT', 'VT', 'HT and VT', 'Other', native_enum=False), nullable=True))
    op.add_column('post_table', sa.Column('elected_by', sa.Enum('Guild', 'Board', 'Educational Council', 'Board Intermediate', 'Other', native_enum=False), nullable=True))
    op.add_column('post_table', sa.Column('elected_user_recommended_limit', sa.Integer(), nullable=False))
    op.add_column('post_table', sa.Column('elected_user_max_limit', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('post_table', 'elected_user_max_limit')
    op.drop_column('post_table', 'elected_user_recommended_limit')
    op.drop_column('post_table', 'elected_by')
    op.drop_column('post_table', 'elected_at_semester')
    op.add_column('election_table', sa.Column('description', sa.VARCHAR(length=5000), autoincrement=False, nullable=True))
    op.add_column('election_table', sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('election_table', sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_column('election_table', 'description_en')
    op.drop_column('election_table', 'description_sv')
    op.drop_column('election_table', 'visible')
    op.drop_column('election_table', 'title_en')
    op.drop_column('election_table', 'title_sv')
    op.add_column('election_post_table', sa.Column('election_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'election_post_table', type_='foreignkey')
    op.create_foreign_key('election_post_table_election_id_fkey', 'election_post_table', 'election_table', ['election_id'], ['election_id'])
    op.drop_column('election_post_table', 'candidation_count')
    op.drop_column('election_post_table', 'sub_election_id')
    op.drop_constraint(None, 'candidations_table', type_='foreignkey')
    op.drop_constraint(None, 'candidations_table', type_='foreignkey')
    op.drop_column('candidations_table', 'created_at')
    op.drop_column('candidations_table', 'post_id')
    op.drop_column('candidations_table', 'sub_election_id')
    op.add_column('candidate_table', sa.Column('election_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'candidate_table', type_='foreignkey')
    op.create_foreign_key('candidate_table_election_id_fkey', 'candidate_table', 'election_table', ['election_id'], ['election_id'])
    op.drop_column('candidate_table', 'sub_election_id')
    op.drop_table('nomination_table')
    op.drop_table('sub_election_table')
    # ### end Alembic commands ###
