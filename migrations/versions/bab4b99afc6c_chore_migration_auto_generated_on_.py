"""chore(migration): combine mission_status + door enums
Revision ID: bab4b99afc6c
Revises: de17c545e41d
Create Date: 2025-07-30 13:18:00.811358
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bab4b99afc6c'
down_revision: Union[str, None] = 'de17c545e41d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    ### —————————————————————————————————————————————
    # 1) Ensure the native enum type exists
    op.execute(
        "CREATE TYPE mission_status AS ENUM ('Accepted','Failed','Review')"
    )

    # 2) Drop the old boolean column
    op.drop_column('group_mission_table', 'is_accepted')

    # 3) Add it back as a native ENUM, defaulting to 'Review'
    op.add_column(
        'group_mission_table',
        sa.Column(
            'is_accepted',
            postgresql.ENUM(
                'Accepted', 'Failed', 'Review',
                name='mission_status',
                create_type=False
            ),
            nullable=False,
            server_default=sa.text("'Review'")
        )
    )

    # 4) Clean up the default if you don't want it permanent
    op.alter_column(
        'group_mission_table',
        'is_accepted',
        server_default=None
    )
    ### —————————————————————————————————————————————

    ### —————————————————————————————————————————————
    # 5) Apply the autogenerated door‐column ENUMs
    door_enum = sa.Enum(
        'Ledningscentralen', 'Ambassaden', 'Syster Kents',
        'Hilbert Cafe', 'Cafeförrådet', 'Pubförrådet',
        'Sopkomprimatorn', 'Arkivet',
        native_enum=False
    )

    op.alter_column(
        'post_door_access_table',
        'door',
        existing_type=sa.VARCHAR(length=12),
        type_=door_enum,
        existing_nullable=False,
    )
    op.alter_column(
        'user_door_access_table',
        'door',
        existing_type=sa.VARCHAR(length=12),
        type_=door_enum,
        existing_nullable=False,
    )
    ### —————————————————————————————————————————————


def downgrade() -> None:
    ### —————————————————————————————————————————————
    # 1) Revert the door columns back to VARCHAR(12)
    op.alter_column(
        'user_door_access_table',
        'door',
        existing_type=sa.Enum(
            'Ledningscentralen', 'Ambassaden', 'Syster Kents',
            'Hilbert Cafe', 'Cafeförrådet', 'Pubförrådet',
            'Sopkomprimatorn', 'Arkivet',
            native_enum=False
        ),
        type_=sa.VARCHAR(length=12),
        existing_nullable=False,
    )
    op.alter_column(
        'post_door_access_table',
        'door',
        existing_type=sa.Enum(
            'Ledningscentralen', 'Ambassaden', 'Syster Kents',
            'Hilbert Cafe', 'Cafeförrådet', 'Pubförrådet',
            'Sopkomprimatorn', 'Arkivet',
            native_enum=False
        ),
        type_=sa.VARCHAR(length=12),
        existing_nullable=False,
    )
    ### —————————————————————————————————————————————

    ### —————————————————————————————————————————————
    # 2) Drop the enum‐backed mission column
    op.drop_column('group_mission_table', 'is_accepted')

    # 3) Re‐add the old Boolean, default FALSE
    op.add_column(
        'group_mission_table',
        sa.Column(
            'is_accepted',
            sa.Boolean,
            nullable=False,
            server_default=sa.text('FALSE')
        )
    )
    op.alter_column(
        'group_mission_table',
        'is_accepted',
        server_default=None
    )

    # 4) Finally drop the mission_status type
    op.execute("DROP TYPE mission_status")
    ### —————————————————————————————————————————————
